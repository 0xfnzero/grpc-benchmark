# =============================================================================
# gRPC 基准测试工具配置 (Rust 版本)
# =============================================================================
#
# 此文件包含 Rust 实现的 gRPC 基准测试工具的配置。
# 复制此文件为 .env 并根据需要修改值：
#   cp .env.example .env
#
# =============================================================================
# gRPC 端点配置
# =============================================================================

# 默认 gRPC 端点 (用于延迟测试和其他工具)
GRPC_URL=https://solana-yellowstone-grpc.publicnode.com:443
GRPC_TOKEN=

# 测试用的替代端点
# GRPC_URL=http://64.130.32.158:10900
# GRPC_URL=https://solana-yellowstone-grpc.publicnode.com:443

# =============================================================================
# 多个 gRPC 端点对比配置 (模式: GRPC_URL_*, GRPC_NAME_*, GRPC_TOKEN_*)
# =============================================================================

# 端点 1 - 自定义节点
GRPC_URL_1=http://64.130.32.158:10900
GRPC_NAME_1=自定义节点
GRPC_TOKEN_1=

# 端点 2 - 公共节点默认
GRPC_URL_2=https://solana-yellowstone-grpc.publicnode.com:443
GRPC_NAME_2=公共节点默认
GRPC_TOKEN_2=

# 根据需要添加更多端点 (递增数字)
# GRPC_URL_3=https://another-endpoint.com:443
# GRPC_NAME_3=另一个节点
# GRPC_TOKEN_3=your-token-here

# 端点对比的测试持续时间（秒）
GRPC_COMPARISON_DURATION_SEC=30

# 并行测试的并发级别 (0 为串行模式)
CONCURRENCY=10

# =============================================================================
# 延迟测试配置 (latency-test 二进制文件)
# =============================================================================

# 要发送的 ping 请求数量
TOTAL_ROUNDS=10

# ping 之间的间隔时间（毫秒，仅串行模式）
PING_INTERVAL_MS=1000

# 测试超时时间（秒）
TEST_TIMEOUT=120


# =============================================================================
# Jito 配置
# =============================================================================

# Jito Block Engine 端点
JITO_URL=https://amsterdam.mainnet.block-engine.jito.wtf
JITO_CONCURRENCY=10

# =============================================================================
# 认证示例
# =============================================================================

# 带认证令牌的示例 (取消注释并设置您的令牌)
# GRPC_URL=https://authenticated-endpoint.com:443
# GRPC_TOKEN=your-auth-token-here

# 私有端点示例
# GRPC_URL_1=https://private-node.example.com:443
# GRPC_NAME_1=私有节点
# GRPC_TOKEN_1=your-private-token

# =============================================================================
# Rust 特定配置
# =============================================================================

# Rust 应用程序的日志级别 (trace, debug, info, warn, error)
RUST_LOG=info

# =============================================================================
# 二进制文件特定使用示例
# =============================================================================

# gRPC 对比测试:
#   cargo run --bin grpc-comparison
#
# 延迟测试:
#   cargo run --bin latency-test
#
# Jito 基准测试:
#   cargo run --bin benchmark-jito
#
# 所有二进制文件都会自动读取此 .env 文件。

# =============================================================================
# 性能调优 (高级)
# =============================================================================

# 启用/禁用特定优化 (取消注释以使用)
# TOKIO_WORKER_THREADS=4        # tokio 工作线程数
# TOKIO_MAX_BLOCKING_THREADS=10 # 文件 I/O 的最大阻塞线程数
